All instance variables are public in Python.

Some OOP languages allow you to explicitly mark certain instance variables as public or private but Python doesn't have that

Two ways to indicate variables are private in Python:

1.

Mark it as one that should never be accessed

self._name
self._socialSecurityNumber
self._dontTouchThis

Naming like this is inteded to represent private data, client software should never attempt to access them directly

Same with method names

def _internalMethod(self):

This is a convention not an enforcement

2.
More explicit privatization

Creating an instance variable with two underscores

class PrivatePerson():
    def __init__(self, name, privateData):
        self.name = name
        self.__privateDatae = privateData

    def getName(self):
        return self.name
    
    def setName(self, name):
        self.name

Python does name mangling and prepends a double underscore name with an underscore and name of the class

self.__privateData becomes self._PrivatePerson__privateData

It is a deterrent but not a guarantee client software can't access it