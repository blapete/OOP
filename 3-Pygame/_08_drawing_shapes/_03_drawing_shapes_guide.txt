From pygame documentation - the color arguments expect a tuple of RGB values.



Anti-aliased line:

pygame.draw.aaline(window, color, startpos, endpos, blend=True)

Draws an anti-aliased line in the window.

If blend is True, the shades will be blended with existing pixel shades instead of overwriting pixels.



Anti-aliased lines:

pygame.draw.aalines(window, color, closed, points, blend=True)

Draws a sequence of anti-aliased lines in the window.

The closed argument is a Boolean; if it's True, a line will be drawn between the first and last points to complete the shape.

The points argument is a list or tuple of (x,y) coordinates to be connected by line segments (must be at least two).

The Boolean blend argument, if set to True, will blend the shades with existing pixel shades instead of overwriting them.



Arc:

pygame.draw.arc(window, color, rect, angle_start, angle_stop, width=0)

Draws an arc in the window.

The arc will fit inside the given rect.

The two angle arguments are the intiial and final angles (in radians, with zero on the right).

The width argument is the thickness to draw the outer edge.



Circle:

pygame.draw.circle(window, color, pos, radius, width=0)

Draws a circle in the window.

The pos is the center of the circle, and radius is the radius.

The width argument is the thickness to draw the outer edge.

If width is 0, then the circle will be filled.



Ellipse:

pygame.draw.ellipse(window, color, rect, width=0)

Draws an ellipse in the window.

The given rect is the area that the ellipse will fill.

The width argument is the thickness to draw the outer edge.

If width is 0, then the ellipse will be filled.



Line:

pygame.draw.line(window, color, startpos, endpos, width=1)

Draws a line in the window.

The width argument is the thickness of the line.



Lines:

pygame.draw.lines(window, color, closed, points, width=1)

Draws a sequence of lines in the window.

The closed argument is a Boolean; if it's True, a line will be drawn between the first and last points to complete the shape.

The points argument is a list or tuple of (x,y) coordinates to be connected by line segments (must be at least two).

The width argument is the thickness of the line.

Specifying a line width wider then 1 does not fill in the gaps between the lines, wide lines and sharp corners won't be joined seamlessly.


Polygon:

pygame.draw.polygon(window, color, pointslist, width=0)

Draws a polygon in the window.

The pointslist specifies the vertices pf the polygon.

The width argument is the thickness to draw the outer edge.

If width is 0, then the polygon will be filled.



Rectangle:

pygame.draw.rect(window, color, rect, width=0)

Draws a rectangle in the window.

The rect is the area of the rectangle.

The width argument is the thickness to draw the outer edge.

If width is 0, then the rectangle will be filled.



The set of primitive calls allows the flexibility to draw any shapes.

The order in which the calls are made is important.

The order of the calls are like layers; elements that are drawn early can be overlaid by later calls to another drawing primitive function.